name: Send Artifacts Workflow
env:
  REGION: us-west-2
  SOLUTION_ORG: aws-solutions
  SOLUTION_NAME: aws-virtual-waiting-room
on: 
  workflow_run:
    workflows: ["Push Workflow"]
    types: [completed]
jobs:
  on_success:
    runs-on: ubuntu-latest
    environment: notify_env
    permissions:
      id-token: write
      contents: read
      actions: read
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install required system packages
        run: |
          pip install --upgrade --force-reinstall -r deployment/requirements.txt 2> error.txt
          if [ -s error.txt ]; then
            echo "ERROR: System package installation failed."
            cat error.txt
            exit 1
          fi
      - name: Get artifacts
        run: |
          export WORKFLOW_RUN_ID=${{ github.event.workflow_run.id }} 
          export COMMIT_ID=${{ github.event.workflow_run.head_sha }}
          export BRANCH=${{ github.event.workflow_run.head_branch }}
          export WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          export NOTIFICATION_ENDPOINT=${{ secrets.ENDPOINT }}

          echo WORKFLOW_RUN_ID=$WORKFLOW_RUN_ID >> $GITHUB_ENV
          echo COMMIT_ID=$COMMIT_ID >> $GITHUB_ENV
          echo NOTIFICATION_ENDPOINT=$NOTIFICATION_ENDPOINT >> $GITHUB_ENV
          echo BRANCH=$BRANCH >> $GITHUB_ENV
          echo WORKFLOW_NAME=$WORKFLOW_NAME >> $GITHUB_ENV
      - name: Configure AWS
        run: |
          sleep 5 # per doc there is still some kind of race condition with federation
          export AWS_ROLE_ARN=${{ secrets.NOTIFY_ROLE }}
          export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
          export AWS_DEFAULT_REGION=${{ env.REGION }}
          
          echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV
          
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE      
      - name: Invoke endpoint
        run: |
          cd deployment
          python end-workflow-notification.py
